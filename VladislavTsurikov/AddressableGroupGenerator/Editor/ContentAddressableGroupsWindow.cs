#if UNITY_EDITOR
using UnityEditor;
using UnityEditor.AddressableAssets;
using UnityEditor.AddressableAssets.Settings;
using UnityEngine;

namespace VladislavTsurikov.AddressableGroupGenerator.Editor
{
    public class ContentAddressableGroupsWindow : EditorWindow
    {
        private int _debugGroupLimit = 999;
        private string _extensionFilter = ".prefab";
        private int _folderDepth = 2;

        private bool _onlySpecificExtension;
        private string _selectedPath = "Assets/Content";

        private void OnGUI()
        {
            EditorGUILayout.LabelField("Root Folder", EditorStyles.boldLabel);
            EditorGUILayout.BeginHorizontal();
            EditorGUILayout.TextField(_selectedPath);
            if (GUILayout.Button("Browse", GUILayout.Width(80)))
            {
                var selected = EditorUtility.OpenFolderPanel("Select Content Folder", "Assets", "");
                if (!string.IsNullOrEmpty(selected))
                {
                    var relativePath = "Assets" + selected.Replace(Application.dataPath, "").Replace('\\', '/');
                    _selectedPath = relativePath;
                }
            }

            EditorGUILayout.EndHorizontal();

            _debugGroupLimit = EditorGUILayout.IntField("Debug Group Limit", _debugGroupLimit);
            _folderDepth = EditorGUILayout.IntField("Folder Depth", _folderDepth);

            _onlySpecificExtension = EditorGUILayout.Toggle("Only Specific Extension", _onlySpecificExtension);
            if (_onlySpecificExtension)
            {
                _extensionFilter = EditorGUILayout.TextField("Extension Filter", _extensionFilter);
            }

            if (GUILayout.Button("Create Groups"))
            {
                AddressableGroupGenerator.CreateGroupsFromContent(_selectedPath, _debugGroupLimit, _folderDepth,
                    _onlySpecificExtension, _extensionFilter);
            }

            if (GUILayout.Button("Remove Auto-Generated Addressable Groups"))
            {
                AddressableAssetSettings settings = AddressableAssetSettingsDefaultObject.GetSettings(false);
                AddressableGroupGenerator.RemoveAutoGeneratedGroups(settings);
            }
        }


        [MenuItem("Window/Addressables/Content Group Creator")]
        public static void ShowWindow() => GetWindow<ContentAddressableGroupsWindow>("Addressable Group Creator");
    }
}
#endif
